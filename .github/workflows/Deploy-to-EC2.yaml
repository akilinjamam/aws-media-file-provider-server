name: Deploy to EC2

on:
   push:
      branches: ['main']  

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout Code
        uses: actions/checkout@v4
      - name: install node-js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
      - name: check node version
        run: node -v
      - name: install dependencies
        run: npm install --frozen-lockfile
      - name: Inject .env file from GitHub Secrets
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env

      - name: Build App
        run: npm run build
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout Code
        uses: actions/checkout@v4
      - name: install node-js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
      - name: check node version
        run: node -v
      - name: install dependencies
        run: npm install --frozen-lockfile
      - name: Inject .env file from GitHub Secrets
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env

      - name: Build App
        run: npm run build  

      - name: Configure SSH
        env: 
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY}}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{secrets.EC2_HOST}} >> ~/.ssh/known_hosts
      - name: Deploy to EC2
        env:
           EC2_HOST: ${{secrets.EC2_HOST}}
           EC2_USER: ${{secrets.EC2_USER}}
        run: |
           # Create deployment directory
           ssh $EC2_USER@EC2_HOST "mkdir -p ~/app"

           # Copy files to EC2 instance
           rsync -avz \
             --exclude='.git' \
             --exclude='node_modules' \
             --exclude='.github' \
             . $EC2_USER@$EC2_HOST:~/app/
           
           # Install production dependencies on EC2
           ssh $EC2_USER@$EC2_HOST "cd ~/app && export PATH=$PATH:/run/user/1000/fnm_multishells/112424_1734077954807/bin && npm install --frozen-lockfile"

           # Stop existing PM2 process if it exists
           ssh $EC2_USER@$EC2_HOST "export PATH=$PATH:/run/user/1000/fnm_multishells/112424_1734077954807/bin && pm2 delete nodejs-app || true"

           # Start the application with PM2
           ssh $EC2_USER@$EC2_HOST "export PATH=$PATH:/run/user/1000/fnm_multishells/112424_1734077954807/bin && cd ~/app && pm2 start dist/server.js --name nodejs-app"

